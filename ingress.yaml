---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ecom-qa
  namespace: app-qa
  annotations:
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    kubernetes.io/ingress.allow-http: "false"
    ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    ingress.kubernetes.io/proxy-request-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-max-temp-file-size: "0"
    ingress.kubernetes.io/proxy-max-temp-file-size: "0"
    cert-manager.io/acme-challenge-type: "http01"
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "false" # should be false if modsecurity-snippet present
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      SecRuleEngine On
      SecRequestBodyAccess On
      SecAuditEngine RelevantOnly
      SecAuditLogParts ABIJDEFHZ
      SecAuditLog /var/log/modsec_audit.log
      Include /etc/nginx/owasp-modsecurity-crs/nginx-modsecurity.conf
      # Include /etc/nginx/modsecurity/modsecurity.conf
spec:
  tls:
  - hosts:
    - ecom.qa.abc.com
    secretName: abc-qa-tls
  rules:
  - host: ecom.qa.abc.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app-v0-1-0
            port:
              number: 9002
